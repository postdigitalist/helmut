{"remainingRequest":"C:\\Users\\Helmut\\Desktop\\Office\\vuepress\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Helmut\\Desktop\\Office\\vuepress\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\Helmut\\Desktop\\Office\\vuepress\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!C:\\Users\\Helmut\\Desktop\\Office\\vuepress\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!C:\\Users\\Helmut\\Desktop\\Office\\vuepress\\example\\marx-mass-adoption.md?vue&type=template&id=0287a1e8&","dependencies":[{"path":"C:\\Users\\Helmut\\Desktop\\Office\\vuepress\\example\\marx-mass-adoption.md","mtime":1624231796015},{"path":"C:\\Users\\Helmut\\Desktop\\Office\\vuepress\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1624215077198},{"path":"C:\\Users\\Helmut\\Desktop\\Office\\vuepress\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1623016856735},{"path":"C:\\Users\\Helmut\\Desktop\\Office\\vuepress\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1624215077198},{"path":"C:\\Users\\Helmut\\Desktop\\Office\\vuepress\\node_modules\\vue-loader\\lib\\index.js","mtime":1623016856735},{"path":"C:\\Users\\Helmut\\Desktop\\Office\\vuepress\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":1624215078862}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgIkNvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yIiwKICAgIHsgYXR0cnM6IHsgInNsb3Qta2V5IjogX3ZtLiRwYXJlbnQuc2xvdEtleSB9IH0sCiAgICBbCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICdFdmVyeSBvbmNlIGluIGEgd2hpbGUsIEkgZmluZCBzb21lb25lIChhIHBvcCBwaGlsb3NvcGhlciwgYSBjb25zdWx0YW50LCBhIGpvdXJuYWxpc3QsIGV0Yy4pIHNlbGxpbmcgYW4gaWRlYSBhYm91dCBhbGllbmF0aW9uLCBmYWlybmVzcyBpbiB0aGUgd29ya3BsYWNlLCBwcm9maXQgcmVkaXN0cmlidXRpb24sIG9yIGFueSBvdGhlciBkaW1lbnNpb24gb2YgZW50ZXJwcmlzZSB0aGVvcml6aW5nIHRoYXQgbWF5IGJlIGVucmljaGVkIGJ5IE1hcnguIE9mIGNvdXJzZSwgd2l0aCAxMGsgY29uc3VsdGFuY3kgc2Vzc2lvbnMgb24gdGhlIGxpbmUsIHRoZXNlIHBlb3BsZSB2ZXJ5IHJhcmVseSBhZGRyZXNzIHRoZSBlbGVwaGFudCBpbiB0aGUgcm9vbS4gVGhlIGNsZWFyZXN0LCBtb3N0IGVsZWdhbnQsIGFuZCBtb3N0IGFjY3VyYXRlIGV4cGxhbmF0aW9uIG9mIHRoZSBtYXR0ZXIgY29tZXMsIG5vdCBmcm9tIHNvbWUgcGllY2Ugb2Ygc29sb3ByZW5ldXIgbGl0ZXJhdHVyZSwgYnV0IGEgMTl0aC1jZW50dXJ5IEdlcm1hbiBwaGlsb3NvcGhlci4gV2h5IHNwZW5kIDEwIG1pbnV0ZXMgdHJ5aW5nIHRvIGV4cGxhaW4gImluIHNpbXBsZSB0ZXJtcyIsIHdpdGggInJlYWwtbGlmZSIgZXhhbXBsZXMsIHdoYXQgdGhlIGdlbml1cyBjb3VsZCBzeW50aGVzaXplIGluIGEgZmV3IGNvbXBvdW5kIHdvcmRzIGJlZm9yZSBhbnkgb2YgdXMgd2VyZSBldmVuIGJvcm4/JwogICAgICAgICkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiU29tZSBjb252ZXJzYXRpb25zLCBlc3BlY2lhbGx5IHB1YmxpYy1mYWNpbmcgY29udmVyc2F0aW9ucyB0aGF0IGZpbmQgdGhlaXIgd2F5IGludG8gdGhlIFN1bmRheSBjb2x1bW5zIG9mIHRoZSBOZXcgWW9yayBUaW1lcywgd291bGQgYmUgYWJzdXJkIGFuZCBkZW1vZMOpIGlmIE1hcnggaGFkIHNlZXBlZCBpbnRvIHRoZSBmYWJyaWMgb2YgaWRlb2xvZ3kuIgogICAgICAgICkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiTWNDYXJ0aHlpc20gaGFzIGdvdHRlbiB1cyBzdHVjayBpbiBjb252ZXJzYXRpb25zIHRoYXQgc2hvdWxkIGhhdmUgYmVlbiBzb2x2ZWQgeWVhcnMgYWdvLiBOb3QgbmVjZXNzYXJpbHkgd2l0aCB0aGUgYWRvcHRpb24gb2Ygc29jaWFsaXNtIGF0IGFuIGludGVybmF0aW9uYWwgc2NhbGUgKHRoZSBvbmx5IHNjYWxlIHBvc3NpYmxlKSwgYnV0IGJlY2F1c2Ugc29tZSB0aGluZ3Mgd291bGQgaGF2ZSBiZWVuIHVuZGVyc3Rvb2QgYXMgb2J2aW91cy4iCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJXaGVuIEkgaGVhciBhIG5vbi1NYXJ4aXN0IGV4cGxhaW4gaXNzdWVzIHN1Y2ggYXMgd29yayBhbGllbmF0aW9uLCB0aGUgZXhwbGFuYXRpb24gc291bmRzIGV4dHJlbWVseSB3ZWlyZCB0byBtZS4gSXQncyBhcyBpZiBpdCB3ZXJlIGFsbCBhIGJpZyB0aXAtdG9laW5nIGFyb3VuZCBhbiBlbm9ybW91cyBjcmF0ZXIgYXQgdGhlIGNlbnRlciBvZiB0aGUgYXJndW1lbnQuIEEgY3JhdGVyIHdoZXJlIE1hcnggc2hvdWxkIGJlLiIKICAgICAgICApCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgJ1RyZW5kIGZvcmVjYXN0aW5nIC0gd2VsbCwgZm9yZWNhc3RpbmcgaW4gZ2VuZXJhbCwgaXMgcG9saXRpY2FsLiBOb3QgbWVyZWx5IGluIGl0cyBpbnRlbnRpb25zLCBvZiBjb3Vyc2UuIEV2ZW4gdGhlIG1vc3QgIm5ldXRyYWwiIHRyZW5kIGZvcmVjYXN0aW5nIGlzIHBvbGl0aWNhbGx5IGNoYXJnZWQuIEl0IGRvZXNuXCd0IGhhdmUgdG8gYmUgb3ZlcnRseSBwb2xpdGljYWwuIFdoYXQgZnV0dXJlIHdlIGNvbnNpZGVyIGxpa2VseSwgd2hhdCB3ZSBiZWxpZXZlIHRoZSBuZXh0IHRyZW5kIHdpbGwgYmUsIHdoYXQgd2UgZmVhciB3aWxsIGhhcHBlbiBuZXh0LCBhcmUgYWxsIHBvbGl0aWNhbGx5IGNvbmRpdGlvbmVkLicKICAgICAgICApCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIlNob2NrZXI6IE91ciB3b3JsZHZpZXcgaXMgcG9saXRpY2FsbHkgYmlhc2VkLiBBbmQgaXQncyBiaWFzZWQgaW4gd2F5cyB3ZSBkb24ndCBwZXJjZWl2ZSBvciB1bmRlcnN0YW5kLiBXaGVuIHdlJ3JlIG5ldXRyYWwsIHdlJ3JlIGJpYXNlZC4gQW5kLCBpZiB0aG9zZSBwb2xpdGljYWwgYmlhc2VzIGludm9sdmUgZGlzY2FyZGluZyB1c2VmdWwgY2F0ZWdvcmllcyBiZWNhdXNlIHRoZWlyIGNvbmNsdXNpb25zIG1heSBiZSBhdCBvZGRzIHdpdGggdGhlIGlkZW9sb2d5IHRoYXQgaGFzIHByb3ZlbiBpdHNlbGYgdGhlIG1vc3QgdXNlZnVsIC0gb3IgdGhlIG1vc3QgY29ycmVjdCBpbiBvdXIgc2VudGltZW50YWwgcGxhbmUsIHdlJ3JlIGRvbmUuIFRoYXQgY3JhdGVyIGF0IHRoZSBjb3JlIG9mIGFuIGV4cGxhbmF0aW9uIGNhbiBhbHNvIGJlIGEgYmxpbmQgc3BvdCB0aGF0IG51bGxpZmllcyBhIHN0cmF0ZWd5LiBJdCdzIGEgdnVsbmVyYWJpbGl0eS4iCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJQaGlsb3NvcGhpY2FsIGlnbm9yYW5jZSBjb25kZW1ucyBvbmUgdG8gYSBzdXBlcmZpY2lhbCB2aWV3IG9mIHRoZSB3b3JsZC4gUHJhY3RpY2FsLCBmdW5jdGlvbmFsLCBidXQgc2V2ZXJlbHkgbGltaXRlZC4gTm90aGluZyBuZXcgd2lsbCBjb21lIG91dCBvZiBzb21lb25lIHdobyByZWZ1c2VzIHRvIGxlYXJuIHdoYXQgdGhlIHN1YmN1dGFuZW91cyBmb3JjZXMgYXQgd29yayBhcmUuIgogICAgICAgICkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiRXZlcnlvbmUgc2hvdWxkIHJlYWQgTWFyeCwgbm90IG5lY2Vzc2FyaWx5IGJlY2F1c2UgZXZlcnlvbmUgc2hvdWxkIGJlIGEgY29tbXVuaXN0LCBidXQgYmVjYXVzZSBoZSdzIG9uZSBvZiB0aGUgZ3JlYXRlc3QsIG1vc3QgaW5mbHVlbnRpYWwgcGhpbG9zb3BoZXJzIGluIHRoZSBoaXN0b3J5IG9mIGh1bWFuaXR5LiBNYXJ4IGZvcmVzYXcgY29udGVtcG9yYXJ5IGxpZmUgMjAwIHllYXJzIGFnby4gSSBkb24ndCBjYXJlIGFib3V0IHRoZSBhbnRpLU1hcnhpc3Qgc2VudGltZW50cyBvZiBpZGVvbG9ndWVzIHdobyBjYW4ndCBldmVuIHNlZSBvbmUgbW9udGggaW50byB0aGUgZnV0dXJlIHdpdGhvdXQgYSBwYXJ0eSBsaW5lLiIKICAgICAgICApCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIklnbm9yaW5nIHRoZSBwcm9kdWN0cyBvZiBvbmUgb2YgdGhlIGdyZWF0ZXN0IG1pbmRzIGluIHRoZSBoaXN0b3J5IG9mIGh1bWFuaXR5IChwcm9kdWN0cyB3aGljaCBjYW4gYWxzbyBiZSBhcHByb3ByaWF0ZWQgYXMgdG9vbHMpLCBkdWUgdG8gc29tZSBtZWRpYS1pbmR1Y2VkLCBjYXJ0b29uaXNoIHByZWp1ZGljZSBpcyBncm90ZXNxdWUuIFJlYWQgTWFyeC4iCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF9jKCJlbSIsIFtfdm0uX3YoIkZ1cnRoZXIgcmVhZGluZzoiKV0pLAogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgewogICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgIGhyZWY6CiAgICAgICAgICAgICAgICAiaHR0cHM6Ly93d3cud2FzaGluZ3RvbnBvc3QuY29tL2hpc3RvcnkvMjAxOS8wNy8yNy95b3Uta25vdy13aG8td2FzLWludG8ta2FybC1tYXJ4LW5vLW5vdC1hb2MtYWJyYWhhbS1saW5jb2xuLyIsCiAgICAgICAgICAgICAgdGFyZ2V0OiAiX2JsYW5rIiwKICAgICAgICAgICAgICByZWw6ICJub29wZW5lciBub3JlZmVycmVyIgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgWwogICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgJyJBYnJhaGFtIExpbmNvbG4gYW5kIE1hcnggd2VyZSBwYWxzIGFuZCBpbmZsdWVuY2VkIGVhY2ggb3RoZXIiJwogICAgICAgICAgICApLAogICAgICAgICAgICBfYygiT3V0Ym91bmRMaW5rIikKICAgICAgICAgIF0sCiAgICAgICAgICAxCiAgICAgICAgKQogICAgICBdKQogICAgXQogICkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gW10KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}