{"remainingRequest":"C:\\Users\\Helmut\\Desktop\\Office\\vuepress\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!C:\\Users\\Helmut\\Desktop\\Office\\vuepress\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!C:\\Users\\Helmut\\Desktop\\Office\\vuepress\\example\\make-the-web-ugly-again.md?vue&type=template&id=a394884c&","dependencies":[{"path":"C:\\Users\\Helmut\\Desktop\\Office\\vuepress\\example\\make-the-web-ugly-again.md","mtime":1624231838935},{"path":"C:\\Users\\Helmut\\Desktop\\Office\\vuepress\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1624215077198},{"path":"C:\\Users\\Helmut\\Desktop\\Office\\vuepress\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1623016856735},{"path":"C:\\Users\\Helmut\\Desktop\\Office\\vuepress\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1624215077198},{"path":"C:\\Users\\Helmut\\Desktop\\Office\\vuepress\\node_modules\\vue-loader\\lib\\index.js","mtime":1623016856735},{"path":"C:\\Users\\Helmut\\Desktop\\Office\\vuepress\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":1624215078862}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxDb250ZW50U2xvdHNEaXN0cmlidXRvciA6c2xvdC1rZXk9IiRwYXJlbnQuc2xvdEtleSI+PHA+PHN0cm9uZz5DPGVtPm88L2VtPm1vIHBhcnRlIGRlbCByZWVzdHJ1Y3R1cmFtaWVudG8gZGUgPGEgaHJlZj0iaHR0cDovL25hZGFyZXNwZXRhYmxlLmNvbS8iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPk5hZGEgUmVzcGV0YWJsZTxPdXRib3VuZExpbmsvPjwvYT4sIGVzdGEgc2VyaWUgaGEgc2lkbyBtdWRhZGEgYXF1w60uPC9zdHJvbmc+PC9wPgo8cD48c3Ryb25nPlN1IDxlbT5zZWd1bmRhPC9lbT4gZW50cmVnYSAoPGVtPmxhPC9lbT4gcHJlc2VudGUpIGZ1ZSBwdWJsaWNhZDxlbT5hPC9lbT4gb3JpZ2luYWxtZW50ZSBlbCA8ZW0+MzwvZW0+IGRlIDxlbT5hYnJpbDwvZW0+IGRlbCAyMDIwLjwvc3Ryb25nPjwvcD4KPGhyPgo8cD5FbiA8YSBocmVmPSJodHRwczovL25hZGFyZXNwZXRhYmxlLmNvbS8yMDIwLzAzLzE4L21ha2UtdGhlLXdlYi11Z2x5LWFnYWluLXB1cmEtaWRlb2xvZ2lhLyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+bGEgZW50cmVnYSBhbnRlcmlvcjxPdXRib3VuZExpbmsvPjwvYT4gZGUgZXN0YSBtYWxhZGFkYSBzZXJpZSwgaW50cm9kdWplIG11eSBicmV2ZW1lbnRlIGVsIHByb2JsZW1hIGRlIGxhIGhvbW9nZW5laXphY2nDs24gZXN0w6l0aWNhIGVuIGVsIGRpc2XDsW8gZGUgaW50ZXJmYWNlcyB5IGxhIHJlbGFjacOzbiBlbnRyZSBkaXNlw7FvIGUgaWRlb2xvZ8OtYS4gRW4gc8OtbnRlc2lzOiBDdWFuZG8gdW5vIHVzYSB1biBsZW5ndWFqZSB2aXN1YWwgZGV0ZXJtaW5hZG8sIG5vIGVzdMOhIG1lcmFtZW50ZSB0b21hbmRvIGVsZW1lbnRvcyBhaXNsYWRvcyB5IGFwbGljw6FuZG9sb3MsIHNpbm8gYXZhbGFuZG8gdW5hIGNvc21vdmlzacOzbiB5IHVuYSBhZ2VuZGEuIFBvciBzdXB1ZXN0bywgZXN0ZSBubyBlcyBlbCBjYXNvIHNpIHVubyB0b21hIGVzdG9zIGVsZW1lbnRvcyBjb24gZWwgcHJvcMOzc2l0byBkZSBwYXJvZGlhcmxvcy48L3A+CjxwPkFjdHVhbG1lbnRlLCB1bmEgaWRlb2xvZ8OtYSBkZSBidWVuYXMgcHLDoWN0aWNhcyB5IGZ1bmRhbWVudGFjaW9uZXMgcHNldWRvLWNpZW50w61maWNhcyB5IGNpZW50w61maWNhcyBsbGV2YSBhIHF1ZSBsb3MgZGlzZcOxYWRvcmVzIGdyYXZpdGVuIGhhY2lhIGxvIGZvcm11bGVpY28uIFkgYWxsw60sIGVuIGxvIGZvcm11bGVpY28sIGxvcyBlc3BlcmFuIHJlY3Vyc29zIHF1ZSBwcmV0ZW5kZW4gZ2FyYW50aXphciBlbCBjdW1wbGltaWVudG8gZGUgbGFzIG5vcm1hcy4gQWxndW5vcywgZGUgb3JpZ2VuIGNvcnBvcmF0aXZvIChlbCBkaXNlw7FvIG1hdGVyaWFsKS4gT3Ryb3MsIGZhY2lsbWVudGUgaW5zdHJ1bWVudGFibGVzIGVuIGVsIHNhbmVhbWllbnRvIGRlIGFnZW5kYXMgcGVydmVyc2FzIChlbCogZmxhdCBkZXNpZ24qKS48L3A+CjxwPsK/SGF5IGFsdGVybmF0aXZhPyBTw60sIHBvciBzdXB1ZXN0by4gVW5hIGRlIGVsbGFzIGVzIGVsIGJydXRhbGlzbW8uPC9wPgo8aDIgaWQ9IsK/cXVlLWVzLWVsLWJydXRhbGlzbW8iPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjwr9xdWUtZXMtZWwtYnJ1dGFsaXNtbyI+IzwvYT4gwr9RdcOpIGVzIGVsIGJydXRhbGlzbW8/PC9oMj4KPHA+UGFyYSBjb21lbnphciwgZXMgbWVuZXN0ZXIgaGFjZXIgdW5hIGF1bnF1ZSBzZWEgYnJldsOtc2ltYSByZXZpc2nDs24gZGVsIGJydXRhbGlzbW8uPC9wPgo8cD5TZWfDum4gV2lraXBlZGlhLm9yZywgcG9ydGFsIGN1eW8gw7puaWNvIHBlY2FkbyBlcyBhaG9ycmFybGUgdHJhYmFqbyBkZSBsZWN0dXJhIGEgZXN0dWRpYW50ZXMgc2VjdW5kYXJpb3MgKDxlbT4jd2lraXBlZGlhZGlkbm90aGluZ3dyb25nPC9lbT4pOjwvcD4KPHA+4oCcRWwgPHN0cm9uZz5icnV0YWxpc21vPC9zdHJvbmc+IGVzIHVuIGVzdGlsbyBhcnF1aXRlY3TDs25pY28gcXVlIHN1cmdpw7MgZGVsIDxhIGhyZWY9Imh0dHBzOi8vZXMud2lraXBlZGlhLm9yZy93aWtpL01vdmltaWVudG9fTW9kZXJubyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+TW92aW1pZW50byBNb2Rlcm5vPE91dGJvdW5kTGluay8+PC9hPiB5IHF1ZSB0dXZvIHN1IGF1Z2UgZW50cmUgbGFzIGTDqWNhZGFzIGRlIDE5NTAgeSAxOTcwLiBFbiBzdXMgcHJpbmNpcGlvcyBlc3RhYmEgaW5zcGlyYWRvIHBvciBlbCB0cmFiYWpvIGRlbCA8YSBocmVmPSJodHRwczovL2VzLndpa2lwZWRpYS5vcmcvd2lraS9BcnF1aXRlY3RvIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5hcnF1aXRlY3RvPE91dGJvdW5kTGluay8+PC9hPiBzdWl6byA8YSBocmVmPSJodHRwczovL2VzLndpa2lwZWRpYS5vcmcvd2lraS9MZV9Db3JidXNpZXIiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPkxlIENvcmJ1c2llcjxPdXRib3VuZExpbmsvPjwvYT4gKGVuIHBhcnRpY3VsYXIgZW4gc3UgZWRpZmljaW8gPGEgaHJlZj0iaHR0cHM6Ly9lcy53aWtpcGVkaWEub3JnL3dpa2kvVW5pdCVDMyVBOV9kJTI3SGFiaXRhdGlvbiIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+VW5pdMOpIGQnSGFiaXRhdGlvbjxPdXRib3VuZExpbmsvPjwvYT4pIHkgZW4gPGEgaHJlZj0iaHR0cHM6Ly9lcy53aWtpcGVkaWEub3JnL3dpa2kvRWVyb19TYWFyaW5lbiIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+RWVybyBTYWFyaW5lbjxPdXRib3VuZExpbmsvPjwvYT4uIEVsIHTDqXJtaW5vIHRpZW5lIHN1IG9yaWdlbiBlbiBlbCB0w6lybWlubyBmcmFuY8OpcyA8ZW0+YsOpdG9uIGJydXQ8L2VtPiB1ICdob3JtaWfDs24gY3J1ZG8nLCB1biB0w6lybWlubyB1c2FkbyBwb3IgTGUgQ29yYnVzaWVyIHBhcmEgZGVzY3JpYmlyIHN1IGVsZWNjacOzbiBkZSBsb3MgbWF0ZXJpYWxlcy4gRWwgY3LDrXRpY28gZGUgYXJxdWl0ZWN0dXJhIGJyaXTDoW5pY28gPGEgaHJlZj0iaHR0cHM6Ly9lcy53aWtpcGVkaWEub3JnL3dpa2kvUmV5bmVyX0JhbmhhbSIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+UmV5bmVyIEJhbmhhbTxPdXRib3VuZExpbmsvPjwvYT4gYWRhcHTDsyBlbCB0w6lybWlubyB5IGxvIHJlbm9tYnLDsyBjb21vIMKrYnJ1dGFsaXNtb8K7ICg8ZW0+YnJ1dGFsaXNtPC9lbT4sIGVuIGluZ2zDqXMpLCB0w6lybWlubyBxdWUgaWRlbnRpZmljYWJhIGVsIGVzdGlsbyBlbWVyZ2VudGUu4oCdPC9wPgo8cD5BIHF1aWVuIGxlIGludGVyZXNlIGNvbnRpbnVhciBsZXllbmRvIGFsIHJlc3BlY3RvLCByZWNvbWllbmRvIGVsIGZ1bmRhbWVudGFsIDxlbT5UaGUgTmV3IEJydXRhbGlzbTwvZW0+LCBkZSBSZXluZXIgQmFuaGFtLiBBIHF1aWVuIGRlc2VlIHVuYSB2aXNpw7NuIHBlcnNvbmFsIHkgcHJvZnVuZGEgc29icmUgbGFzIHBvc2liaWxpZGFkZXMgcG/DqXRpY2FzIGRlbCBicnV0YWxpc21vLCByZWNvbWllbmRvIDxhIGhyZWY9Imh0dHBzOi8vd3d3LnNzZW5zZS5jb20vZW4tdXMvZWRpdG9yaWFsL2N1bHR1cmUvcmljYXJkby1ib2ZpbGwtYmV5b25kLWJydXRhbGlzbSIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+bGEgYnJpbGxhbnRlIGVudHJldmlzdGE8T3V0Ym91bmRMaW5rLz48L2E+IGRlIFNTRU5TRSBjb24gUmljYXJkbyBCb2ZpbGwuPC9wPgo8cD5Mb3MgZnVuZGFtZW50b3MgZGVsIGJydXRhbGlzbW8gc29uLCBhIGdyYW5kZXMgcmFzZ29zLCB5IGNvbW8gbG9zIGRlZmluZSBCYW5oYW0gKHRhbnRvIGVuIHN1IG9icmEgb3JpZ2luYWwgZGUgMTk1NSBjb21vIGVuIHN1IHN1Y2Vzb3IgZGUgMTk2NiksIGVsIHJlY2hhem8gZGUgbGFzIGNvbmNlcGNpb25lcyBwcmVkb21pbmFudGVzIGRlIGxvIGJlbGxvIHkgZGUgbG8gZGVzZWFibGUsIGxhIGZyYW5xdWV6YSBzb2JyZSBsb3MgbWF0ZXJpYWxlcyB1dGlsaXphZG9zIHkgdW4gZnVuY2lvbmFsaXNtbyBkZXNpbmhpYmlkbyBtYXJpZGFkbyBjb24gdW5hIHNlbnNpYmlsaWRhZCBleHByZXNpb25pc3RhLjwvcD4KPGgyIGlkPSJzb2JyZS1lbC1lY2xlY3RpY2lzbW8tZGVsLWJydXRhbGlzbW8tZGlnaXRhbCI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNzb2JyZS1lbC1lY2xlY3RpY2lzbW8tZGVsLWJydXRhbGlzbW8tZGlnaXRhbCI+IzwvYT4gU29icmUgZWwgZWNsZWN0aWNpc21vIGRlbCBicnV0YWxpc21vIGRpZ2l0YWw8L2gyPgo8cD5FcyBiYXN0YW50ZSBzZW5jaWxsbywgdW5hIHZleiB1bm8gc2UgaGEgbnV0cmlkbyBkZSB1bm9zIHBvY29zIGVqZW1wbG9zLCBpZGVudGlmaWNhciBlbCBicnV0YWxpc21vIGVuIGFycXVpdGVjdHVyYS4gQ3VhbmRvIHNlIGhhYmxhIGRlIGJydXRhbGlzbW8gd2ViLCBsYXMgY29zYXMgcHVlZGVuIHBvbmVyc2UgdW4gdGFudG8gY29uZnVzYXMuPC9wPgo8cD5DdWFuZG8gc2UgcHJldGVuZGUgaWx1c3RyYXIgZWwgZXN0aWxvLCBhIG1lbnVkbyBzZSB0b21hbiBlamVtcGxvcyBjb21vIGVsIGRpc2XDsW8gZGUgV2lraXBlZGlhIHkgQmxvb21iZXJnLmNvbSwgcGVybyB0YW1iacOpbiBzaXRpb3MgZGUgYXBhcmllbmNpYSBtdWNobyBtw6FzIGRpc3J1cHRpdmEuIEJhc3RhIGNvbiByZXZpc2FyIGVsIGNhdMOhbG9nbyBkZSA8YSBocmVmPSJodHRwczovL2JydXRhbGlzdHdlYnNpdGVzLmNvbS8iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPmh0dHBzOi8vYnJ1dGFsaXN0d2Vic2l0ZXMuY29tLzxPdXRib3VuZExpbmsvPjwvYT4gcGFyYSBkYXJzZSBjdWVudGEgZGUgbGEgaW1wcmVkaWN0aWJpbGlkYWQgZGVsIGNvbmNlcHRvIGRlIOKAnGJydXRhbGlzbW8gd2Vi4oCdLiBBbGd1aWVuIHB1ZWRlIGFudW5jaWFybWUgcXVlIHVuIHNpdGlvIGVzIGJydXRhbGlzdGEgeSwgc2luIGFudGVzIHZpc2l0YXJsbywgbm8gcHVlZG8gYWRpdmluYXIgcXXDqSBjb250ZW5kcsOhLjwvcD4KPHA+PGltZyBzcmM9Imh0dHBzOi8vcmVzLTMuY2xvdWRpbmFyeS5jb20vaHZremtva3RnL2ltYWdlL3VwbG9hZC9xX2F1dG8vdjEvZ2hvc3QtYmxvZy1pbWFnZXMvYnJ1dGFsaXNtMS5wbmciIGFsdD0iIj48L3A+CjxwPjxpbWcgc3JjPSJodHRwczovL3Jlcy01LmNsb3VkaW5hcnkuY29tL2h2a3prb2t0Zy9pbWFnZS91cGxvYWQvcV9hdXRvL3YxL2dob3N0LWJsb2ctaW1hZ2VzL2JydXRhbGlzbTIucG5nIiBhbHQ9IiI+PC9wPgo8cD48aW1nIHNyYz0iaHR0cHM6Ly9yZXMtMy5jbG91ZGluYXJ5LmNvbS9odmt6a29rdGcvaW1hZ2UvdXBsb2FkL3FfYXV0by92MS9naG9zdC1ibG9nLWltYWdlcy9icnV0YWxpc20zLnBuZyIgYWx0PSIiPjwvcD4KPHA+PGltZyBzcmM9Imh0dHBzOi8vcmVzLTMuY2xvdWRpbmFyeS5jb20vaHZremtva3RnL2ltYWdlL3VwbG9hZC9xX2F1dG8vdjEvZ2hvc3QtYmxvZy1pbWFnZXMvNC5wbmciIGFsdD0iIj48L3A+CjxwPkVuIDxlbT5TbWFzaGluZyBCb29rIDY8L2VtPiwgZWwgZGlzZcOxYWRvciBWaXRhbHkgRnJlZWRtYW4gcGxhbnRlYSBxdWUg4oCcbGEgYXJxdWl0ZWN0dXJhIGJydXRhbGlzdGEgc2UgY2FyYWN0ZXJpemEgcG9yIGVzdMOpdGljYXMgZGVzcHJlb2N1cGFkYXMsIG5vIGludGVuY2lvbmFsbWVudGUgcm90YXMuIEN1YW5kbyBzZSBhcGxpY2EgYWwgZGlzZcOxbyB3ZWIsIGVzdGUgZXN0aWxvIGludGVuY2lvbmFsbWVudGUgcm9tcGUgY29udmVuY2lvbmVzIHkgcHJpbmNpcGlvcyBndcOtYS7igJ08L3A+CjxwPlNpIGJpZW4gZWwgdMOpcm1pbm8g4oCcZXN0w6l0aWNhcyBkZXNwcmVvY3VwYWRhc+KAnSAoPGVtPuKAnHVuY29uY2VybiBhZXN0aGV0aWNz4oCdPC9lbT4pIGN1YW5kbyBzZSByZWZpZXJlIGFsIGJydXRhbGlzbW8gZXMgY3Vlc3Rpb25hYmlsw61zaW1vLCBlbnRpZW5kbyBxdcOpIHF1aWVyZSBkZWNpciBGcmVlZG1hbjogwr9Dw7NtbyBwdWVkZSBzZXIgcXVlIGxvcyBlamVtcGxvcyBhZGp1bnRvcyBwZXJ0ZW5lemNhbiBhIHVuYSBtaXNtYSBjb3JyaWVudGU/IMK/UXXDqT8gwr9BY2FzbyBjdWFuZG8gdW5vIHNlIHJlZmllcmUgYSBicnV0YWxpc21vIHdlYiBzZSByZWZpZXJlIGEgYWxnbyBtw6FzIHF1ZSB1bmEgc2VyaWUgZGUgY2xpY2jDqXMgdmlzdWFsZXM/PC9wPgo8cD5BdW5xdWUg4oCcaGF5YSBtdWNob+KAnSBvIOKAnGhheWEgcG9jb+KAnSBlbiBsYSBwYW50YWxsYSwgbG8gcXVlIGNhcmFjdGVyaXphIGFsIGJydXRhbGlzbW8gd2ViIGVzIHVuIHJvbXBpbWllbnRvIGRlIGxhcyBjb252ZW5jaW9uZXMgZGUgcXXDqSBlcyB1biBzaXRpbyBiaWVuIGRpc2XDsWFkbywgeSB1biByZXRvcm5vIGFsICpldGhvcyAqZGUgbGEgd2ViIHRlbXByYW5hLCBlbiBsYSBxdWUgbG9zIHNpdGlvcyBlcmFuIOKAnGV4cGVyaWVuY2lhc+KAnSBpbXByZWRlY2libGVzLiBMb3Mgc2l0aW9zIGJydXRhbGlzdGFzIHNvbiBkZWZlY3R1b3Nvcy4gUHVlZGVuIHNlciBsaW1pdGFkb3MgbyBubyB2ZXJzZSBiaWVuIGVuIHRlbMOpZm9ub3MgbcOzdmlsZXMuIFkgbm8gcmVuaWVnYW4gZGUgbG8gcXVlIHNvbi4gRW4gc3VzIHRvcnBlemFzIHNlIGV2aWRlbmNpYSBlbCBjYXLDoWN0ZXIgZGVsIG1lZGlvLiBObyBvY3VsdGFuLCBzaW5vIHF1ZSBzZSByZWdvY2lqYW4geSB0cmFiYWphbiBjb24g4oCcbGEgdGV4dHVyYSBkZSBpbnRlcm5ldOKAnS4gRW50b25jZXMsIHVzYW4gZWxlbWVudG9zIHF1ZSBldmlkZW5jaWFuIHF1ZSBsbyBxdWUgdW5vIGVzdMOhIHZpZW5kbyBlcyB1bmEgcMOhZ2luYSB3ZWI6IFRpbWVzIE5ldyBSb21hbiwgZW5sYWNlcyBhenVsZXMgc3VicmF5YWRvcywgdmlkZW9zLCBpbcOhZ2VuZXMsIGFyY2hpdm9zIGRlIGF1ZGlv4oCmPC9wPgo8cD5Db21vIGVsIGJydXRhbGlzbW8gYXJxdWl0ZWN0w7NuaWNvIHJlbmVnYWJhIGRlIGxhcyBjb252ZW5jaW9uZXMgZGUgbG8gYmVsbG8gZW4gcG9zIGRlbCBlbmFsdGVjaW1pZW50byBkZSBsb3MgbWF0ZXJpYWxlcyB5IGRlbCBmdW5jaW9uYWxpc21vLCBlc3RvIHF1ZSBoZSBkZSBsbGFtYXIgYnJ1dGFsaXNtbyBkaWdpdGFsIHJlY2hhemEgbGFzIGNvbnZlbmNpb25lcyBkZSBsbyBkZXNlYWJsZSBlbiBwb3MgZGUgbGEgcmVjdXBlcmFjacOzbiBkZSBsYXMgcG9zaWJpbGlkYWRlcyBlc3TDqXRpY2FzIGRlIGxhIHdlYiB2ZXJuw6FjdWxhLjwvcD4KPHA+RXMgY2llcnRvLCBhIHZlY2VzIHNlIGNhbGlmaWNhIGVycsOzbmVhbWVudGUgYWwgbWluaW1hbGlzbW8gY29tbyBicnV0YWxpc21vLiBFbCBkaXNlw7FvIGVzIGxhIG1hdGVyaWFsaXphY2nDs24gZGUgbGEgaWRlb2xvZ8OtYS4gUGVybyBzaSBlbCBkaXNlw7FvIGVzIGxpbWl0YWRvIGEgdW5hIHNlcmllIGRlIGRlY2lzaW9uZXM8L3A+CjxwPmVzdMOpdGljYXMgY29uIGludGVuY2lvbmVzIGRlIG1lcmNhZG8sIGN1YWxxdWllciBkZWNsYXJhY2nDs24gcG9zaWJsZSBwYXNhIGEgc2VyIHVuIGRpc2ZyYXosIHVuIHNsb2dhbiwgbyB1bmEgYnJvbWEuPC9wPgo8cD5MYSBtYXlvciBkaWZlcmVuY2lhIGVudHJlIGVsIGJydXRhbGlzbW8geSBlbCBtaW5pbWFsaXNtbyBlbiBkaXNlw7FvIHdlYiBlcyBxdWUgZWwgYnJ1dGFsaXNtbyBkZW1hbmRhIG1heW9yIGF0ZW5jacOzbi4gTm9zIGZ1ZXJ6YSBhIHByZXN0YXJsZSBhdGVuY2nDs24gYSBsYSBmb3JtYSBkZWwgc2l0aW8sIG5vIHPDs2xvIGEgc3UgY29udGVuaWRvLiBFc3RhIGVzIHVuYSBkZSBsYXMgcmF6b25lcyBwb3IgbGFzIHF1ZSBtYXJjYXMqIG1haW5zdHJlYW0qIHJhcmEgdmV6IGhhY2VuIG3DoXMgcXVlIHVuIGd1acOxbyBhbCBicnV0YWxpc21vLCB5IGxvcyBhcnRpc3RhcyB2aXN1YWxlcyBsbyBkaXNmcnV0YW4gdGFudG8gcXVlIGV4aXN0ZSB1biBzZXJ2aWNpbyBkZSBkaXNlw7FvIGRlIHNpdGlvcyA8ZW0+ZHJhZy1hbmQtZHJvcDwvZW0+IHF1ZSBvZnJlY2UgbWF5b3JpdGFyaWFtZW50ZSBwbGFudGlsbGFzIGJydXRhbGlzdGFzIC0gQ2FyZ28uPC9wPgo8cD5Db21vIHVzdWFyaW8sIGJhc3RhIGNvbiBoYWNlcnNlIHVuYSBzb2xhIHByZWd1bnRhIHBhcmEgZGVjaWRpciBzaSB1biBzaXRpbyBlcyBtaW5pbWFsaXN0YSBvIGJydXRhbGlzdGE6IMK/RXN0w6FzIGluY8OzbW9kbz88L3A+Cjxocj4KPGgyIGlkPSJhbmV4byI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNhbmV4byI+IzwvYT4gQW5leG88L2gyPgo8cD4yMi8wNC8yMDIwPC9wPgo8cD5BeWVyIGEgbGEgbm9jaGUgKG8gbcOhcyBiaWVuIGhveSBhIGxhIG1hZHJ1Z2FkYSksIGNvbnZlcnNhbmRvIGNvbiBBbGVqYW5kcm8gQ3NvbWUgKDxhIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vYWxlamFuZHJvY3NvbWUiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPkJhdWhhdXNhdXJ1czxPdXRib3VuZExpbmsvPjwvYT4pLCDDqWwgbWUgaGl6byBub3RhciBsbyBzaWd1aWVudGUgc29icmUgZXN0ZSBhcnTDrWN1bG86PC9wPgo8cD4mcXVvdDtVbmEgY3VhbGlkYWQgcXVlIG11Y2hvIG5vIHNlIGRlc3RhY2EgZGVsIGJydXRhbGlzbW8gZXMgbGEgZGVsIGNvbXBvcnRhbWllbnRvIGRlIGxvIGNvbnN0cnVpZG8gYW50ZSBlbCBwYXNvIGRlbCB0aWVtcG8uIEVsIHBhc28gZGVsIHRpZW1wbyBlbiBsYXMgY2l1ZGFkZXMgZXMgdW4gZWxlbWVudG8gc3VwZXIgaW1wb3J0YW50ZSwgcG9ycXVlIGVzdMOhIGVubGF6YWRvIGNvbiBlbCBhcnJhaWdvIGRlIGxhIGdlbnRlIGFsIGx1Z2FyLiBQb3IgZWplbXBsbywgY3VhbmRvIHNlIGRhIHVuIHByb2Nlc28gZGUgZ2VudHJpZmljYWNpb24gVklPTEVOVE8sIHF1ZSBsYSBtYXlvcsOtYSBubyDCoHRpZW5lIGVuIGN1ZW50YSwgaGFjZSBtaWVyZGEgVE9ETyBlbCB0ZWppZG8gdXJiYW5vLXNvY2lhbC4gTG8gcXVlLCBlbiBwYXJ0ZSwgYWRlbcOhcyBkZSB0b2RhIGxhIGJhdGVyw61hIGRlIGNvc2FzIHF1ZSBtZW5jaW9uYXN0ZSwgaGFjZSBlbCBicnV0YWxpc21vLCBlcyBwb25lciBvYnJhcyBlbiBjaXVkYWRlcyBjb21vIHNpIHNpZW1wcmUgaHViaWVzZW4gZXN0YWRvIGFow60uIEEgbG9zIHBvY29zIGHDsW9zLCBlbCBob3JtaWfDs24gcHJlbmRlIGNvbiBtdXNnbywgc2UgbWFuY2hhLCBsZSBhcGFyZWNlIGh1bWVkYWQsIGVudmVqZWNlIGluc3RhbnTDoW5lYW1lbnRlIHkgc2UgcGVyY2liZSBjb21vIGFsZ28gcXVlICZxdW90O3NpZW1wcmUgZXN0dXZvJnF1b3Q7LiBFc28gYXl1ZGEgbXVjaG8gYSBsYSBwZXJjZXBjacOzbiBkZSBsYSBnZW50ZSB5IGVsIGFycmFpZ28gcsOhcGlkbyBwYXJhIG9icmFzIG51ZXZhcy4gRWplbXBsbzogTU9PT09DSEEgdml2aWVuZGEgc29jaWFsIGRlIGxvcyA1MCcsIDYwJywgNzAnIGVuIEdyYW4gQnJldGHDsWEgbG9ncsOzIG1hcmlkYXIgZXN0by4gTm8gYXPDrSB0YW50byBsYSBlc2NhbGEsIGEgdmVjZXMgbGEgcm9tcMOtYW4sIHBlcm8gZXN0byBlc3RhYmEuIEVzbyBlbiBMb25kcmVzIHBhcnRpY3VsYXJtZW50ZSBlcyBTVVBFUiBpbXBvcnRhbnRlIHBvcnF1ZSBlcyB1bmEgY2l1ZGFkIG1pbGVuYXJpYSBkb25kZSB0b2RhIGludGVydmVuY2nDs24gdXJiYW5hIGVzdGEgc3VwZXIgbWVkaWRhIHBhcmEgZ2VuZXJhciBlbCBtZW5vciBpbXBhY3RvIHBvc2libGUuPC9wPgo8cD5ZIG1lIGFjZXJjYSBlc3RlIGFjZXJ0YWTDrXNpbW8gZWplbXBsbzogPGVtPlRoZSBBbGV4YW5kcmEgUm9hZCBFc3RhdGU8L2VtPiAoTmVhdmUgQnJvd24sIENhbWRlbiksIHJlY2nDqW4gaW5hdWd1cmFkbyB5IGx1ZWdvIHRyYXMgZMOpY2FkYXMgZGUgZXN0YXIgYWjDrS48L3A+CjxwPjxpbWcgc3JjPSJodHRwczovL3Jlcy00LmNsb3VkaW5hcnkuY29tL2h2a3prb2t0Zy9pbWFnZS91cGxvYWQvcV9hdXRvL3YxL2dob3N0LWJsb2ctaW1hZ2VzL2FycXVpdGVjdHVyYTEucG5nIiBhbHQ9IiI+PC9wPgo8cD48aW1nIHNyYz0iaHR0cHM6Ly9yZXMtNC5jbG91ZGluYXJ5LmNvbS9odmt6a29rdGcvaW1hZ2UvdXBsb2FkL3FfYXV0by92MS9naG9zdC1ibG9nLWltYWdlcy9hcnF1aXRlY3R1cmEyLnBuZyIgYWx0PSIiPjwvcD4KPHA+Tm8gcHVlZG8gc2kgbm8gcmVsYWNpb25hcmxvIGFsIGhlY2hvIGRlIHF1ZSBtdWNob3MgZGUgZXN0b3Mgc2l0aW9zIG5vIHNlYW4gcmVzcG9uc2l2b3MgKG5vIGVzdMOpbiBhZGFwdGFkb3MgYSBkaXNwb3NpdGl2b3MgbcOzdmlsZXMpLiBEZSBhbGd1bmEgbWFuZXJhLCB0ZXJtaW5hbiB2acOpbmRvc2UgY29tbyBhbGdvIHF1ZSBmdWUgaGVjaG8geSBkZWphZG8gdGFsIGN1YWwgZXN0YWJhIGhhY2UgJmd0OzEwIGHDsW9zLiDCv08gbm8/IMK/RWwgYnJ1dGFsaXNtbyogb25saW5lKiBlcyB1biBjb21lbnRhcmlvIHBvc3RpcsOzbmljbyBoZWNobyBkZXNkZSBlbCBwcmVzZW50ZSwgbyBhc3BpcmEgYSBsYSBhdGVtcG9yYWxpZGFkIGRlbCBicnV0YWxpc21vIGFycXVpdGVjdMOzbmljbz8gwr9FcyBtZXJhIGhhdW50b2xvZ8OtYSBvIGVzIHVuIGFjdG8gZGUgZ2VuaW8gcXVlLCBlbiBsdWdhciBkZSBwZXJ0ZW5lY2VybGUgYSB1bmEgw6lwb2NhIHUgb3RyYSwgbGUgcGVydGVuZWNlIGFsIG11bmRvPyDCv1B1ZWRlIGV4aXN0aXIgdGFsIGNvc2EgZW4gbGEgZGlnaXRhbGlkYWQ/IMK/UHVlZGUgZWwgZGlzZcOxbyB3ZWIgc2VyIGF0ZW1wb3JhbD8gRGUgYWxndW5hIG1hbmVyYSwgZXN0b3Mgc2l0aW9zIHRlcm1pbmFuIHZpw6luZG9zZSBjb21vIGFsZ28gcXVlIGZ1ZSBoZWNobyB5IGRlamFkbyB0YWwgY3VhbCBlc3RhYmEgaGFjZSAmZ3Q7MTAgYcOxb3MgKHNpZW1wcmUgeSBjdWFuZG8gdW5vIG5vIG1pcmUgZWwgPGVtPm1hcmt1cDwvZW0+KS48L3A+CjwvQ29udGVudFNsb3RzRGlzdHJpYnV0b3I+Cg=="},null]}